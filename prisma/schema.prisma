generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String    @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  balance       Float     @default(10000)
  transactions  Transaction[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Transaction {
  id           String           @id @default(cuid())
  type         TransactionType
  quantity     Int
  symbol       String
  pricePerCoin Float
  createdAt    DateTime         @default(now())
  user         User             @relation(fields: [userId], references: [id])
  userId       String

  @@index([userId])
}

enum TransactionType {
  BUY
  SELL
}

model CapitalDataPoint {
  id        String     @id @default(cuid())
  capital   Float
  userId    String
  createdAt DateTime   @default(now())
}
